#directive @inherits(type: String!) on OBJECT

schema {
    query: Query
    mutation: Mutation
}

scalar Upload

enum UserType {
    SISTEMA,
    ESTACIONAMENTO
}

enum EstadosEnum {
    AC, AL, AP, AM, BA, CE, DF, ES, GO, MA, MT, MS, MG, PA, PB, PR, PE, PI, RJ, RN, RS, RO, RR, SC, SP, SE, TO
}

type BaseResult {
    success: Boolean!,
    error: String
}

type AdminSistema {
    id: ID!,
    nome: String!,
    email: String!
}

type AdminEstacio {
    id: ID!,
    email: String!
}

type PedidoCadastro {
    id: ID!,
    nome: String!,
    telefone: String!,
    endereco: Endereco!,
    foto: String!,
    adminEstacio: AdminEstacio
}

type Endereco {
    id: ID!,
    logradouro: String!,
    estado: EstadosEnum!,
    cidade: String!,
    bairro: String!,
    numero: String!,
    cep: String!
}

input EnderecoInput {
    logradouro: String!,
    estado: EstadosEnum!,
    cidade: String!,
    bairro: String!,
    numero: String!,
    cep: String!
}

type BaseAdminSistemaRes {
    success: Boolean!,
    error: String,
    adminSistema: AdminSistema
}

type LoginRes {
    success: Boolean!,
    error: String,
    token: String
}

type PedidoCadastroRes {
    success: Boolean!,
    error: String,
    pedidoCadastro: PedidoCadastro
}

type PedidoCadastroResList {
    success: Boolean!,
    error: String,
    pedidosCadastro: [PedidoCadastro]
}

type Mutation {
    createAdminSistema(nome: String!, email: String!, senha: String!): BaseAdminSistemaRes!
    login(email: String!, senha: String!, tipo: UserType!): LoginRes!
    createPedidoCadastro(nome: String!, telefone: String!, endereco: EnderecoInput!, foto: Upload!): PedidoCadastroRes!
}

type Query {
    getPedidoCadastro(pedidoId: ID!): PedidoCadastroRes!
    listPedidoCadastro(amount: Int, index: Int): PedidoCadastroResList!
}
