schema {
    query: Query
    mutation: Mutation
}

# ---------------
# --- Scalar ----
# ---------------

scalar Upload
scalar Point
scalar Time
scalar Date
scalar Decimal

# --------------
# --- Enums ----
# --------------

enum UserType {
    SISTEMA,
    ESTACIONAMENTO
}

enum EstadosEnum {
    AC, AL, AP, AM, BA, CE, DF, ES, GO, MA, MT, MS, MG, PA, PB, PR, PE, PI, RJ, RN, RS, RO, RR, SC, SP, SE, TO
}

# ---------------
# --- Models ----
# ---------------

type AdminSistema {
    id: ID!,
    nome: String!,
    email: String!
}

type AdminEstacio {
    id: ID!,
    email: String!
    adminMestre: Boolean!
}

type PedidoCadastro {
    id: ID!,
    nome: String!,
    telefone: String!,
    msgRejeicao: String,
    numRejeicoes: Int!,
    endereco: Endereco!,
    foto: String!,
    adminEstacio: AdminEstacio
}

type HorarioPadrao {
    segundaAbr: Time,
    segundaFec: Time,
    tercaAbr: Time,
    tercaFec: Time,
    quartaAbr: Time,
    quartaFec: Time,
    quintaAbr: Time,
    quintaFec: Time,
    sextaAbr: Time,
    sextaFec: Time,
    sabadoAbr: Time,
    sabadoFec: Time,
    domingoAbr: Time,
    domingoFec: Time
}

type ValorHora {
    id: ID!,
    valor: Decimal!,
    veiculo: String!
}

type HorarioDivergente {
    id: ID!,
    data: Date!,
    horaAbr: Time!,
    horaFec: Time!
}

type Estacionamento {
    id: ID!,
    nome: String!,
    telefone: String!,
    endereco: Endereco!,
    foto: String!,
    estaSuspenso: Boolean!,
    estaAberto: Boolean!,
    cadastroTerminado: Boolean!,
    descricao: String,
    qtdVagaLivre: Int!,
    totalVaga: Int!,
    horarioPadrao: HorarioPadrao!,
    valoresHora: [ValorHora]!,
    horasDivergentes: [HorarioDivergente]!
}

type Endereco {
    id: ID!,
    logradouro: String!,
    estado: EstadosEnum!,
    cidade: String!,
    bairro: String!,
    numero: String!,
    cep: String!,
    coordenadas: Point
}

type Veiculo {
    id: ID!,
    nome: String!
}

# ---------------
# --- Inputs ----
# ---------------

input HorarioPadraoInput {
    segundaAbr: Time,
    segundaFec: Time,
    tercaAbr: Time,
    tercaFec: Time,
    quartaAbr: Time,
    quartaFec: Time,
    quintaAbr: Time,
    quintaFec: Time,
    sextaAbr: Time,
    sextaFec: Time,
    sabadoAbr: Time,
    sabadoFec: Time,
    domingoAbr: Time,
    domingoFec: Time
}

input ValorHoraInput {
    valor: Decimal!
    veiculoId: ID!
}

input EnderecoInput {
    logradouro: String!,
    estado: EstadosEnum!,
    cidade: String!,
    bairro: String!,
    numero: String!,
    cep: String!
}

# -------------------------
# --- Tipos de Retorno ----
# -------------------------

type BaseAdminSistemaRes {
    success: Boolean!,
    error: String,
    adminSistema: AdminSistema
}

type BaseAdminEstacioRes {
    success: Boolean!,
    error: String,
    adminEstacio: AdminEstacio
}

type LoginRes {
    success: Boolean!,
    error: String,
    token: String
}

type PedidoCadastroRes {
    success: Boolean!,
    error: String,
    pedidoCadastro: PedidoCadastro
}

type PedidoCadastroResList {
    success: Boolean!,
    error: String,
    pedidosCadastro: [PedidoCadastro]
}

type EstacioCadRes {
    success: Boolean!,
    error: String,
    estacionamento: Estacionamento
}

type EstacioListRes {
    success: Boolean!,
    error: String,
    estacionamentos: [Estacionamento!]
}

type HoraDivergenteRes {
    success: Boolean!,
    error: String,
    horarioDivergente: HorarioDivergente
}

type SimpleResponse {
    success: Boolean!
    error: String
}

type ValorHoraCadResponse {
    success: Boolean!
    error: String
    valorHora: ValorHora
}

type HorarioPadraoResponse {
    success: Boolean!
    error: String
    horarioPadrao: HorarioPadrao
}

type VeiculoCadRes {
    success: Boolean!,
    error: String,
    veiculo: Veiculo
}


type VeiculoListRes {
    success: Boolean!,
    error: String,
    veiculos: [Veiculo]
}

# -----------------
# --- Mutation ----
# -----------------

type Mutation {
    createAdminSistema(nome: String!, email: String!, senha: String!): BaseAdminSistemaRes!

    createAdminEstacio(email: String!, senha: String!): BaseAdminEstacioRes!
    addAdminToEstacio(email: String!): SimpleResponse!

    login(email: String!, senha: String!, tipo: UserType!): LoginRes!

    createPedidoCadastro(nome: String!, telefone: String!, endereco: EnderecoInput!, foto: Upload): PedidoCadastroRes!

    editPedidoCadastro(nome: String, telefone: String, endereco: EnderecoInput, foto: Upload): PedidoCadastroRes!

    acceptPedidoCadastro(pedidoId: ID!, coordenadas: Point!): EstacioCadRes!

    rejectPedidoCadastro(pedidoId: ID!, motivo: String!): SimpleResponse!

    finishEstacionamentoCadastro(totalVaga: Int!, horarioPadrao: HorarioPadraoInput!, valoresHora: [ValorHoraInput],
        estacioId: ID, descricao: String): EstacioCadRes!

    atualizarQtdVagaLivre(numVaga: Int!): SimpleResponse!

    editEstacionamento(nome: String, telefone: String, endereco: EnderecoInput, total_vaga: Int, descricao: String,
        foto: Upload, estacioId: ID): EstacioCadRes!

    editEstacioValorHora(veiculoId: ID!, valor: Decimal!, estacioId: ID): ValorHoraCadResponse!

    editEstacioHorarioPadrao(dia: String!, horaAbre: Time!, horaFecha: Time!, estacioId: ID): HorarioPadraoResponse!

    deleteEstacioValorHora(veiculoId: ID!, estacioId: ID): SimpleResponse!
    deleteEstacioHorarioPadrao(dia: String!, estacioId: ID): SimpleResponse!

    setHorarioDivergente(data: Date!, horaAbre: Time!, horaFecha: Time!): HoraDivergenteRes!
    deleteHorarioDivergente(data: Date!): SimpleResponse!

    enviarEmailSenha(email: String!, tipo: UserType!): SimpleResponse!
    recuperarSenha(code: String!, novaSenha: String!): SimpleResponse!
}

# --------------
# --- Query ----
# --------------

type Query {
    getPedidoCadastro(pedidoId: ID): PedidoCadastroRes!

    listPedidoCadastro(amount: Int, index: Int): PedidoCadastroResList!

    listEstacionamento(amount: Int, index: Int): EstacioListRes!

    getEstacionamento(estacioId: ID): EstacioCadRes!

    buscarEstacio(coordenadas: Point!): EstacioListRes!

    getVeiculo(veiculoId: ID!): VeiculoCadRes!
    listVeiculo: VeiculoListRes!
}
